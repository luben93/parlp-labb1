result below, Main{cores=4, size=100000000, mergeThreshold=100, quickThreshold=100, quickSort}
8460198430
9994943035
9281762579
8479116679
8762271749
8724625073
10492954423
8845454208
8861472020
8305883023
8283702936
result below, Main{cores=4, size=10000000, mergeThreshold=100, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=5000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=9000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=10000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=100, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=10000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=100000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=10000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=500000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=500000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=5000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=1000, quickSort}
4924582595
5348230673
5390600858
5092267583
4252248891
5120426278
5134881812
4841022811
5078862342
4897256726
4788730546
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=1000, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=1000000, quickThreshold=1000, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=1000, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=1000, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=1000, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=100000, quickThreshold=1000, mergeSort}
mainframe
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=1000, quickSort}
8976586446
9658091593
9792193386
10401978785
10383157290
9178307006
10399937273
9440379617
9883973550
9396306605
10220590362
10499323267
10007462884
10008347895
9775798627
9706241364
9927122284
10527786793
9687567669
9878715767
9810213801
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
3836950140
3889519807
3883190055
3892803461
3836304988
3889669121
3840905669
3852034951
3836571520
3826928839
4199305417
4048290159
4238672557
5291739204
3904020297
3975013489
4041410334
4111531045
3864293745
3885918519
3836760317
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
4291099839
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
3220028413
2960800849
2958242951
2931964662
2910663883
2877210005
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
3953090283
5158107701
4279919720
5159939102
4268391182
4320796308
5155619349
4272074923
4273151853
5157334889
5155122228
5155140192
4488048379
4268387777
4273939833
5155238323
4605964779
4278574663
4607230491
4271992533
5154462691
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort}
13901463945
13889167310
13972083863
13870101116
13874524242
13913255585
13872549075
13868643040
13875470893
13870198671
13873806854
13869244609
13870022708
13869205875
13866642930
13870682663
13868932545
13872140770
13870028584
13867181693
13869343940
13619627117
13616997611
13622400399
13617860478
13617621538
13620220811
13616473886
13618046943
13621473746
13618599288
13616989261
13621105863
13617264734
13615416400
13618673880
13615485492
13618755806
13619342833
13615735148
13618801633
13619586202
6148689915
5273971807
5030892053
5272128103
5024811227
5272589745
6147613320
5024427842
6143622302
6151787118
5018498453
6146748734
5273688265
6153159852
6151816335
5272261437
5030308843
5025223334
5018329854
5045275218
5030620364
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
13456070624
13391347371
13334237726
13336384060
13280705829
13323307256
13326845971
13354789171
13318771431
13330067039
13362503012
13328180487
13336490051
13406435641
13314589465
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
result below, Main{cores=1, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
13439831759
13381101518
13379054339
13375231021
13376947664
13374109472
13377384581
13379552855
13377933351
13377059925
13374598661
13370980738
13372929844
13386165126
13379760453
13373793170
13381300917
13379803808
13378385436
13375391554
13377954723
result below, Main{cores=2, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
6902433638
6904156649
6899402164
6899441545
6885178813
6899742864
6901341839
6900744604
6891460519
6882645831
6890345434
6902176971
6904169317
6899913462
6897295749
6892961630
6902954843
6883201540
6900592361
6900658017
6889704883
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
4979921967
4979032880
4001587741
4864734852
4862277350
4232569276
4002792441
4557855834
5171835678
3999227369
4696960208
4699981931
3951456935
4614860229
4984431569
5177631787
3935154771
4748409415
3967989908
3879212178
4728425270
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
5659470895
5580253729
5650187260
5647018177
5641558894
5619324677
5497569017
3760428614
3771624011
3732310462
6129103559
6108618785
5575961215
5643333243
3751565329
3725656012
3740297588
3729433297
3828672374
5601576766
3732383150
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
6257099851
4251143958
4384852950
3698173273
4179342796
3840706570
4490757023
4333389627
4023768800
4173259697
4248902636
6198635247
6190852833
4349421938
3926037574
4411294229
4224698572
3705112940
3729340745
4112998929
4563313330
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
6720802870
6733062898
5101906060
3947287565
5123068783
6765203491
6735693406
4768901647
5089455805
5128272048
5310500589
5099181605
5129116336
4666645519
5099323566
5127341377
5123276861
5311753234
6742303585
6730430613
4770024266
result below, Main{cores=1, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
13693473822
13621083431
13623608882
13621551224
13620043099
13623221412
13626995706
13623502950
13625217774
13624708154
13623757988
13625683818
13627069259
13620952170
13625093047
13626342978
13626356866
13622349587
13622987842
13625169740
13623061479
result below, Main{cores=2, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
7054559709
7056285293
7053845657
7063943091
7066983063
7067216099
7062792244
7068089701
7066682152
7069728411
7065597524
7065036525
7062183639
7069401522
7070791767
7069706672
7066737728
7065151914
7076038958
7068268660
7066143946
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort}
4102053005
3933173710
4265336406
3981725298
4273555187
4175259936
4024518252
4199892227
3976763093
4133696237
4455351742
4206227364
4005071869
4234654736
4419474722
3958003181
4605218472
4125930528
4313145376
4257965046
4033962040
2951341128
2799864672
2785842977
2797476405
2798083445
2805544294
2792487373
2789142773
2831673245
2791621930
2795988541
2794958810
2792119212
2742746269
2791502653
2790309552
2787560853
2847110514
2836914581
2795899518
2712863668
7652532049
7655502796
7656768441
7653030036
7655155907
7663281759
7680258516
7656507839
7657958809
7651164849
3031792149
2890370472
2801176964
2797255127
2799751749
2712907672
2793661426
2888908369
2902351976
2833635496
2789787680
2789875999
2799487398
2708955873
2829229163
2794433910
2788557585
2704408642
2920885787
2789270002
2879877388
7697517383
7695934540
7694990967
7697333931
7698764858
7696362684
7695892973
7694158205
//Real testdata
result below, Main{cores=1, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort, parllell}
13099355751
13027864112
13019863338
13022808626
13022829117
13021910561
13023309272
13020585917
13020624852
13022166507
13020213182
13025576396
13023345480
13024508153
13025366732
13023235026
13023425522
13023811033
13028130268
13023275585
13024732914
result below, Main{cores=2, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort, parllell}
6797746742
6797616838
6800423426
6798173799
6802971924
6804967898
6800286012
6799837565
6798186790
6801764801
6797431821
6803072749
6798061978
6800198574
6797481776
6809703135
6797833001
6801315881
6797766504
6802497883
6798740649
result below, Main{cores=4, size=100000000, mergeThreshold=10000000, quickThreshold=100000, quickSort, mergeSort, parllell}
4310319004
4604017796
4300367075
4020354361
3831802352
3906905968
3864330690
4106212420
4082469514
4088241203
3934417576
4299516978
4295687136
3913692826
4019565239
3966480664
3835696106
3934342530
3872828441
4397083434
4067520658
result below, Main{cores=4, size=100000000, mergeThreshold=1000, quickThreshold=1000, quickSort, mergeSort, seriell}
3594363536
3671568101
3703123552
3619288321
3619517198
3582603077
3691495743
3498460332
3505739070
3541232009
3618356898
3572981141
3497043562
3533549566
3619031553
3648490134
3679030620
3515215836
3605572479
3572175321
3533559078
result below, Main{cores=4, size=100000000, mergeThreshold=10000, quickThreshold=1000, quickSort, mergeSort, seriell}
3340631951
3179201844
3071119127
3002893161
3045057172
3090273149
3282322756
3161057049
3023044382
2996011179
3035465220
3404487041
2998048063
3476922519
3476131023
3002109624
3110600922
3405756906
3089698790
3047394189
3055665090
result below, Main{cores=4, size=100000000, mergeThreshold=100000, quickThreshold=1000, quickSort, mergeSort, seriell}
3444740220
3519079141
3525240164
3695969498
3291094762
3493430470
3279620544
3298439315
3635957875
3493109456
3279679601
3603281218
3514653995
3425995156
3472555165
3681098403
3276381039
3274174061
3505862242
3506080476
3513490095
result below, Main{cores=4, size=100000000, mergeThreshold=500000, quickThreshold=5000, quickSort, mergeSort, seriell}
3279256194
3287756787
3277988357
3275043270
3241242943
3516524598
3697136725
3274028471
3606088775
3443068200
3277938281
3275763220
3617052982
3408131235
3514678944
3554228895
3275022901
3285078646
3275034310
3518546656
3290287702
result below, Main{cores=4, size=100000000, mergeThreshold=2500000, quickThreshold=25000, quickSort, mergeSort, seriell}
3545761229
3288754998
3287498596
3611882865
3271319020
3693308128
3274422398
3730686716
3693697280
3511850751
3273000616
3422012408
3286336307
3274347127
3609331951
3273552954
3274017974
3275989993
3271461046
3695616230
3417277028
result below, Main{cores=4, size=100000000, mergeThreshold=12500000, quickThreshold=125000, quickSort, mergeSort, seriell}
3282968241
3276359946
3632883443
3276795311
3276365550
3514618263
3513992762
3515694839
3698663456
3517120381
3273836852
3425971752
3643995403
3514133944
3611680270
3276808986
3698434925
3275001906
3611442347
3278490032
3611224094
result below, Main{cores=4, size=100000000, mergeThreshold=62500000, quickThreshold=625000, quickSort, mergeSort, seriell}
3520488704
3278932008
3279539705
3280876107
3279244205
3694743327
3272830778
3516993360
3281156690
3281105930
3278948780
3555059094
3277144361
3278665028
3274632450
3275368500
3228475656
3509864472
3276746501
3273701845
3610773021
result below, Main{cores=4, size=100000000, mergeThreshold=312500000, quickThreshold=3125000, quickSort, mergeSort, seriell}
3281774459
3276965701
3695923882
3558764646
3517070074
3609826149
3505050302
3276749670
3274223033
3612722180
3516340122
3514286271
3289175863
3515422381
3445322724
3273635343
3272108609
3204406752
3518134878
3643629564
3612110186
//megatest